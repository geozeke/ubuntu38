# File assembled and tweaked by Peter Nardi
# Date: 12/02/22

# Don't add duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# Set history length and file size
HISTSIZE=1000
HISTFILESIZE=2000

# Check the window size after each command and, if necessary, update the values
# of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will match all
# files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# Uncomment for a colored prompt, if the terminal has the capability
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \W\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and add aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" ||\
    eval "$(dircolors -b)"
    alias ls='ls -F --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands. Use like so: sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Enable programmable completion features (you don't need to enable this, if
# it's already enabled in /etc/bash.bashrc and /etc/profile sources
# /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Set default text editor
export VISUAL=vim
export EDITOR="$VISUAL"

###########################################################
# Custom Functions
###########################################################

# Custom function called 've' to activate the default python virtual
# environment. When a VM is setup, the default environment is created in
#  '~/.venv'. 

function ve() {
    source ~/.venv/bin/activate
}

###########################################################
# Common aliases
###########################################################

alias cp='cp -i'                  # prompt before overwriting
alias mv='mv -i'                  # Prompt before overwriting
alias rm='rm -i'                  # prompt before removing
alias cd..='cd ..'                # takes care of that typical typo
alias EXIT='exit'                 # in case caps lock gets stuck
alias clean='rm *~'               # cleanup all those emacs ~ files
alias h='history | tail'
alias o='xdg-open'
alias xterm='gnome-terminal'
alias tuneup='~/.tuneup.py'       # tuneup script for system updates
alias cacheburn='~/.cacheburn.py' # cleanup script for cache files

###########################################################
# Misc
###########################################################

ulimit -c 0          # doesn't allow huge core files
set -o ignoreeof     # ^D will not exit shell

###########################################################
# AdHoc aliases
###########################################################

alias nb='python3 -m nuitka --follow-imports --remove-output'
alias tuneup='~/ubuntu38/scripts/tuneup.py'
alias cacheburn='~/ubuntu38/scripts/cacheburn.py'
